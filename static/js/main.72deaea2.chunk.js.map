{"version":3,"sources":["types/LoadingReducerActionTypes.ts","store/loadingReducer.ts","types/CurrentTodoReducerTypes.ts","store/currentTodoReducer.ts","types/Todo.ts","store/TodosReducer.ts","types/Filter.ts","store/index.ts","components/hooks/useTypedSelector.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["LoadingReducerActionTypes","CurrentTodoReducerTypes","actions","type","START_LOADING","FINISH_LOADING","loadingReducer","state","action","TodoTypes","todoId","SET_TODO","payload","Filter","dispatch","a","FETCH_TODOS","fetch","response","json","FETCH_TODOS_SUCCESS","FETCH_TODOS_ERROR","TodosReducer","reducer","combineReducers","loading","currentTodoReducer","todo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useTypedSelector","useSelector","TodoList","todos","selectUser","className","map","cn","completed","title","onClick","userId","id","TodoFilter","changeFilteredBy","changeQuery","query","onChange","event","target","value","handleChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","res","TodoModal","selectedUser","useState","user","setUser","useEffect","loadUser","userFromServer","href","email","name","App","setUserId","visibleTodos","setVisibleTodos","filteredBy","setFilteredBy","setQuery","isLoading","selectedTodo","useDispatch","loadingActions","handleQueryFiltering","toLowerCase","includes","filter","usersTodo","find","filterType","input","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72deaea2.chunk.js","sourcesContent":["export enum LoadingReducerActionTypes {\n  START_LOADING = 'START_LOADING',\n  FINISH_LOADING = 'FINISH_LOADING',\n}\n\nexport type StartLoading = {\n  type: LoadingReducerActionTypes.START_LOADING,\n};\n\nexport type FinishLoading = {\n  type: LoadingReducerActionTypes.FINISH_LOADING,\n};\n\nexport type LoadingAction = StartLoading | FinishLoading;\n","import {\n  LoadingAction,\n  LoadingReducerActionTypes,\n} from '../types/LoadingReducerActionTypes';\n\nexport const actions = {\n  // eslint-disable-next-line max-len\n  startLoading: () => ({ type: LoadingReducerActionTypes.START_LOADING }),\n  // eslint-disable-next-line max-len\n  finishLoading: () => ({ type: LoadingReducerActionTypes.FINISH_LOADING }),\n};\n\nexport const selectors = {\n  getLoading: (loading: boolean) => loading,\n};\n\nconst initialState = false;\n\nconst loadingReducer = (\n  state = initialState,\n  action: LoadingAction,\n): boolean => {\n  switch (action.type) {\n    case LoadingReducerActionTypes.START_LOADING:\n      return true;\n\n    case LoadingReducerActionTypes.FINISH_LOADING:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","export enum CurrentTodoReducerTypes {\n  SET_TODO = 'SET_TODO',\n}\n","import { CurrentTodoReducerTypes } from '../types/CurrentTodoReducerTypes';\n\nexport const actions = {\n  // eslint-disable-next-line max-len\n  setTodo: (todoId: number) => ({ type: CurrentTodoReducerTypes.SET_TODO, payload: todoId }),\n};\n\ntype CurrentTodoAction = {\n  type: CurrentTodoReducerTypes.SET_TODO,\n  payload: number,\n};\n\nexport const selectors = {\n  setTodo: (todoId: number) => todoId,\n};\n\nconst initialState = 0;\n\nconst loadingReducer = (\n  state = initialState,\n  action: CurrentTodoAction,\n): number => {\n  switch (action.type) {\n    case CurrentTodoReducerTypes.SET_TODO:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","export interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nexport enum TodoTypes {\n  FETCH_TODOS = 'FETCH_TODOS',\n  FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS',\n  FETCH_TODOS_ERROR = 'FETCH_TODOS_ERROR',\n}\n\ntype FetchTodoAction = {\n  type: TodoTypes.FETCH_TODOS,\n};\n\nexport type TodoSuccessAction = {\n  type: TodoTypes.FETCH_TODOS_SUCCESS,\n  payload: Todo[],\n};\n\ntype TodoErrorAction = {\n  type: TodoTypes.FETCH_TODOS_ERROR,\n  payload: string,\n};\n\nexport type TodoAction = FetchTodoAction | TodoSuccessAction | TodoErrorAction;\n","import { Dispatch } from 'redux';\nimport {\n  Todo, TodoAction, TodoTypes,\n} from '../types/Todo';\n\nexport const actions = {\n\n  getTodos: () => {\n    return async (dispatch: Dispatch<TodoAction>) => {\n      try {\n        dispatch({ type: TodoTypes.FETCH_TODOS });\n\n        // eslint-disable-next-line max-len\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n        const json = await response.json();\n\n        dispatch({ type: TodoTypes.FETCH_TODOS_SUCCESS, payload: json });\n      } catch (error) {\n        dispatch({\n          type: TodoTypes.FETCH_TODOS_ERROR,\n          payload: 'Error data',\n        });\n      }\n    };\n  },\n};\n\nexport const selectors = {\n  getTodo: (todo: Todo[]) => todo,\n};\n\nconst TodosReducer = (\n  state: Todo[] = [],\n  action: TodoAction,\n): Todo[] => {\n  switch (action.type) {\n    case TodoTypes.FETCH_TODOS_SUCCESS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default TodosReducer;\n","export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport\nloadingReducer,\n{ selectors as loadingSelectors } from './loadingReducer';\nimport\ncurrentTodoReducer,\n{ selectors as currentTodoSelectors } from './currentTodoReducer';\nimport\nTodosReducer,\n{ selectors as todosSelectors } from './TodosReducer';\nimport { Todo } from '../types/Todo';\n\nexport const selectors = {\n  getLoading(state: { loading: boolean }) {\n    return loadingSelectors.getLoading(state.loading);\n  },\n\n  setTodo(state: { todoId: number }) {\n    return currentTodoSelectors.setTodo(state.todoId);\n  },\n\n  getTodo(state: { todo: Todo[] }) {\n    return todosSelectors.getTodo(state.todo);\n  },\n};\n\nconst reducer = combineReducers({\n  loading: loadingReducer,\n  todoId: currentTodoReducer,\n  todo: TodosReducer,\n});\n\nexport const store = createStore(reducer, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport type RootState = ReturnType<typeof reducer>;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectUser }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn(\n            todo.completed\n              ? 'has-text-success has-background-success-light'\n              : 'has-text-danger has-background-danger-light',\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            <span className=\"icon is-size-5\">\n              <i className={cn('fas',\n                todo.completed\n                  ? 'fa-check-square'\n                  : 'fa-ban')}\n              />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            {todo.title}\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button is-outlined is-primary\"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId, todo.id);\n              }}\n            >\n              {`Show ${todo.userId}`}\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  changeFilteredBy: (filterType: string) => void,\n  changeQuery: (input: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeFilteredBy,\n  changeQuery,\n  query,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeFilteredBy(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleChange(event)}\n          >\n            <option\n              value={Filter.ALL}\n            >\n              All\n            </option>\n            <option\n              value={Filter.ACTIVE}\n            >\n              Active\n            </option>\n            <option\n              value={Filter.COMPLETED}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete has-text\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | undefined,\n  selectedUser: number | 0,\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedUser,\n  selectUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const userFromServer = await getUser(selectedUser);\n\n      setUser(userFromServer);\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectUser(0, 0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Filter } from './types/Filter';\nimport { actions as loadingActions } from './store/loadingReducer';\nimport { actions as currentTodoReducer } from './store/currentTodoReducer';\nimport { actions } from './store/TodosReducer';\nimport { useTypedSelector } from './components/hooks/useTypedSelector';\nimport {\n  Loader, TodoFilter, TodoList, TodoModal,\n} from './components/index';\n\nexport const App: React.FC = () => {\n  const todos = useTypedSelector(state => state.todo);\n  const [userId, setUserId] = useState(0);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const isLoading = useTypedSelector(state => state.loading);\n  const selectedTodo = useTypedSelector(state => state.todoId);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n\n    dispatch(actions.getTodos());\n\n    dispatch(loadingActions.finishLoading());\n  }, []);\n\n  const changeFilteredBy = (filterType: string) => {\n    setFilteredBy(filterType);\n  };\n\n  const changeQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleQueryFiltering = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (filteredBy) {\n      case Filter.ALL:\n        setVisibleTodos(todos.filter(todo => handleQueryFiltering(todo.title)));\n        break;\n\n      case Filter.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed && handleQueryFiltering(todo.title)));\n        break;\n\n      case Filter.COMPLETED:\n        setVisibleTodos(todos.filter(todo => todo.completed && handleQueryFiltering(todo.title)));\n        break;\n\n      default:\n        break;\n    }\n  }, [filteredBy, query, todos]);\n\n  const selectUser = (id: number, todoId: number) => {\n    setUserId(id);\n    dispatch(currentTodoReducer.setTodo(todoId));\n  };\n\n  const usersTodo = todos.find(todo => todo.id === selectedTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeFilteredBy={changeFilteredBy}\n                changeQuery={changeQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList todos={visibleTodos} selectUser={selectUser} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!userId && (\n        <TodoModal\n          todo={usersTodo}\n          selectedUser={userId}\n          selectUser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}